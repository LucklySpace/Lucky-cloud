<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.xy</groupId>
    <artifactId>Lucky-cloud</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>Lucky-cloud</name>
    <description>Lucky-cloud</description>
    <packaging>pom</packaging>

    <modules>
        <module>im-gateway</module>
        <module>im-auth</module>
        <module>im-common</module>
        <module>im-server</module>
        <module>im-database</module>
        <module>im-file</module>
        <module>im-analysis</module>
        <module>im-generator</module>
        <module>im-proxy</module>
        <module>im-update</module>
        <module>im-meet</module>
        <module>im-ai</module>
        <module>im-connect</module>
    </modules>
    
    <properties>
        <!-- Java 目标版本 -->
        <java.version>21</java.version>

        <!-- 项目构建编码 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Spring Boot / Cloud 版本 -->
        <spring-boot.version>3.2.0</spring-boot.version>
        <spring-cloud.version>2023.0.0</spring-cloud.version>
        <spring-cloud-alibaba.version>2023.0.0.0-RC1</spring-cloud-alibaba.version>
        <spring-boot-starter-dubbo.version>3.3.5</spring-boot-starter-dubbo.version>

        <!-- Spring AI版本 -->
        <spring-ai.version>1.0.0-M6</spring-ai.version>

        <!-- gRPC / starter 版本 -->
        <grpc.spring.version>3.0.0.RELEASE</grpc.spring.version>
        <grpc.starter.version>3.0.0.RELEASE</grpc.starter.version>
        <grpc.client.version>3.0.0.RELEASE</grpc.client.version>

        <!-- JSON 处理（Jackson） -->
        <jackson.version>2.17.2</jackson.version>

        <!-- Kotlin 语言版本 -->
        <kotlin.version>1.6.21</kotlin.version>

        <!-- MyBatis / MyBatis-Plus 版本 -->
        <mybatis-plus-spring.version>3.5.11</mybatis-plus-spring.version>
        <mybatis.plus.version>3.5.5</mybatis.plus.version>
        <mybatis.spring.version>3.0.3</mybatis.spring.version>

        <!-- 日志与 APM -->
        <slf4j.version>1.7.25</slf4j.version>
        <logback.version>1.4.12</logback.version>
        <skywalking.version>8.0.1</skywalking.version>

        <!-- 常用工具库 -->
        <hutool.version>5.8.29</hutool.version>
        <guava.version>33.3.1-jre</guava.version>
        <commons.lang3.version>3.9</commons.lang3.version>
        <commons.io.version>2.18.0</commons.io.version>

        <!-- 网络 / 底层 -->
        <netty.version>4.1.108.final</netty.version>

        <!-- 数据库驱动 -->
        <mysql.version>8.2.0</mysql.version>
        <postgresql.version>42.7.5</postgresql.version>

        <!-- 分布式 / 缓存 -->
        <redis.version>4.2.3</redis.version>
        <redission.version>3.43.0</redission.version>

        <!-- 代码生成 / 注解 -->
        <lombok.version>1.18.34</lombok.version>

        <!-- 其它库版本 -->
        <kryo.version>5.6.2</kryo.version>
        <tika.version>3.0.0</tika.version>
        <hanlp.version>portable-1.8.6</hanlp.version>
        <knife4j.version>4.3.0</knife4j.version>

        <!-- 额外第三方组件 -->
        <sms.version>2.0.2</sms.version>
        <zxing.version>3.4.1</zxing.version>
        <thumbnailator.version>0.4.20</thumbnailator.version>
        <commons-imaging.version>1.0-alpha2</commons-imaging.version>
        <commons-io.version>2.18.0</commons-io.version>

        <!-- 库兼容 / 其他 -->
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <minio.version>8.6.0</minio.version>
        <okhttp.version>4.9.0</okhttp.version>
        <snakeyaml.version>2.2</snakeyaml.version>
        <javax.annotation.api.version>1.3.2</javax.annotation.api.version>

        <!-- Sentinel / Nacos / ShardingSphere -->
        <sentinel.version>1.8.6</sentinel.version>
        <nacos.version>2.4.2</nacos.version>
        <shardingsphere.version>5.5.2</shardingsphere.version>

        <!-- GraalVM插件版本 -->
        <native-maven-plugin.version>0.9.28</native-maven-plugin.version>

        <!-- Maven插件版本 -->
        <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>

        <!-- 动态数据源版本 -->
        <dynamic.version>4.1.2</dynamic.version>

        <!-- Druid数据源版本 -->
        <druid.version>1.2.6</druid.version>

        <!-- Kotlin标准库版本 -->
        <kotlin-stdlib.version>1.3.70</kotlin-stdlib.version>

        <!-- Hutool工具包版本 -->
        <hutools.version>5.8.25</hutools.version>

        <!-- 注释掉的备用版本 -->
        <!--        <spring-boot-admin.version>2.7.10</spring-boot-admin.version>-->
        <!--        <tobato.version>1.27.2</tobato.version>-->
        <!--        <kaptcha.version>2.3.3</kaptcha.version>-->
        <!--        <pagehelper.boot.version>1.4.7</pagehelper.boot.version>-->
        <!--        <druid.version>1.2.16</druid.version>-->
        <!--        <dynamic-ds.version>3.5.2</dynamic-ds.version>-->
        <!--        <commons.io.version>2.11.0</commons.io.version>-->
        <!--        <velocity.version>2.3</velocity.version>-->
        <!--        <fastjson.version>2.0.34</fastjson.version>-->
        <!--        <jjwt.version>0.9.1</jjwt.version>-->
        <!--        <minio.version>8.2.2</minio.version>-->
        <!--        <poi.version>4.1.2</poi.version>-->
        <!--        <transmittable-thread-local.version>2.14.3</transmittable-thread-local.version>-->


    </properties>

    <!-- 依赖声明 -->
    <dependencyManagement>
        <dependencies>

            <!--    热部署依赖    -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-devtools</artifactId>
                <scope>runtime</scope>
                <optional>true</optional>
            </dependency>

            <!--    API文档 - swagger   -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>

            <!-- SpringCloud 微服务 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- SpringCloud Alibaba 微服务 -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- SpringBoot 依赖配置 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <!-- SpringBoot Web -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <!-- gRPC Spring Boot -->
            <dependency>
                <groupId>net.devh</groupId>
                <artifactId>grpc-spring-boot-starter</artifactId>
                <version>${grpc.spring.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-bom</artifactId>
                <version>${spring-boot-starter-dubbo.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- bootstrap 启动器 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.graalvm.buildtools/native-maven-plugin -->
        <dependency>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>${native-maven-plugin.version}</version>
        </dependency>

    </dependencies>


    <build>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.yml</include>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.yml</include>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                    <include>**/*.png</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <configuration>
                    <!-- 只使用 @ 作为分隔符，避免替换 Spring 的 ${...} -->
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <!--        <pluginManagement>-->
        <!--            <plugins>-->
        <!--                <plugin>-->
        <!--                    <groupId>org.springframework.boot</groupId>-->
        <!--                    <artifactId>spring-boot-maven-plugin</artifactId>-->
        <!--                    <version>${spring-boot.version}</version>-->
        <!--                    <executions>-->
        <!--                        <execution>-->
        <!--                            <goals>-->
        <!--                                <goal>repackage</goal>-->
        <!--                            </goals>-->
        <!--                        </execution>-->
        <!--                    </executions>-->
        <!--                </plugin>-->
        <!--            </plugins>-->
        <!--        </pluginManagement>-->
    </build>

    <repositories>
        <repository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>


    <!-- Profiles配置 -->
    <profiles>
        <!-- 开发环境 -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- Nacos 配置中心配置 -->
                <nacos.config.server-addr>localhost:8848</nacos.config.server-addr>
                <nacos.config.namespace>public</nacos.config.namespace>
                <nacos.config.group>DEFAULT_GROUP</nacos.config.group>

                <!-- Nacos 服务发现配置 -->
                <nacos.discovery.server-addr>localhost:8848</nacos.discovery.server-addr>
                <nacos.discovery.username>nacos</nacos.discovery.username>
                <nacos.discovery.password>nacos</nacos.discovery.password>
                <nacos.discovery.namespace>public</nacos.discovery.namespace>
                <nacos.discovery.group>DEFAULT_GROUP</nacos.discovery.group>

                <sentinel.dashboard.url>http://localhost:20000</sentinel.dashboard.url>

                <!-- 应用 Profile -->
                <app.profiles.active>dev</app.profiles.active>
            </properties>
        </profile>

        <!-- 测试环境 -->
        <profile>
            <id>test</id>
            <properties>
                <!-- Nacos 配置中心配置 -->
                <nacos.config.server-addr>test.nacos.server:8848</nacos.config.server-addr>
                <nacos.config.namespace>test</nacos.config.namespace>
                <nacos.config.group>TEST_GROUP</nacos.config.group>

                <!-- Nacos 服务发现配置 -->
                <nacos.discovery.server-addr>test.nacos.server:8848</nacos.discovery.server-addr>
                <nacos.discovery.username>nacos</nacos.discovery.username>
                <nacos.discovery.password>nacos</nacos.discovery.password>
                <nacos.discovery.namespace>test</nacos.discovery.namespace>
                <nacos.discovery.group>TEST_GROUP</nacos.discovery.group>

                <!-- 应用 Profile -->
                <app.profiles.active>test</app.profiles.active>
            </properties>
        </profile>

        <!-- 生产环境 -->
        <profile>
            <id>prod</id>
            <properties>
                <!-- Nacos 配置中心配置 -->
                <nacos.config.server-addr>prod.nacos.server:8848</nacos.config.server-addr>
                <nacos.config.namespace>prod</nacos.config.namespace>
                <nacos.config.group>PROD_GROUP</nacos.config.group>

                <!-- Nacos 服务发现配置 -->
                <nacos.discovery.server-addr>prod.nacos.server:8848</nacos.discovery.server-addr>
                <nacos.discovery.username></nacos.discovery.username>
                <nacos.discovery.password></nacos.discovery.password>
                <nacos.discovery.namespace>prod</nacos.discovery.namespace>
                <nacos.discovery.group>PROD_GROUP</nacos.discovery.group>

                <!-- 应用 Profile -->
                <app.profiles.active>prod</app.profiles.active>
            </properties>
        </profile>
    </profiles>

</project>